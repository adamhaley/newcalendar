{
  "name": "bigdecimal",
  "version": "0.6.1",
  "author": {
    "name": "Jason Smith",
    "email": "jhs@iriscouch.com",
    "url": "http://www.iriscouch.com/"
  },
  "description": "Arbitrary-precision BigInteger and BigDecimal real numbers: Apache Harmony's implementation",
  "tags": [
    "big",
    "bignum",
    "bigint",
    "integer",
    "arithmetic",
    "precision",
    "bigintegers",
    "decimal",
    "float"
  ],
  "homepage": "https://github.com/iriscouch/bigdecimal.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/iriscouch/bigdecimal.js.git"
  },
  "engines": [
    "node"
  ],
  "dependencies": {},
  "devDependencies": {
    "couchapp": "0.8.1"
  },
  "main": "lib/bigdecimal.js",
  "bin": {
    "bigdecimal.js": "./repl.js"
  },
  "readme": "#  BigDecimal for Javascript\n\n*BigDecimal for Javascript* is a pure-Javascript implementation of immutable, arbitrary-precision, signed decimal numbers. BigDecimal supports **decimal** math with arbitrary precision.\n\nFor a limited time, we will throw in **BigInteger** support at no extra charge!\n\n## Purpose\n\nIf this is a problem for you:\n\n    node> 0.1 + 0.2\n    0.30000000000000004\n\nThen you need BigDecimal for Javascript. BigDecimal is great for arithmetic of *financial* information, or anything exceeding the Javascript `Number` (IEEE-754 float) type. Decimal did not make the cut in the new ECMAScript standards so it&rsquo;s time we got our act together.\n\n## Usage\n\nBigDecimal works in the browser and in Apache CouchDB. See the simple [BigDecimal Couch app demo][demo] to compare server-side and client-side expression evaluation.\n\nBigDecimal is available in the NPM repository for [NodeJS][node].\n\n    npm install bigdecimal\n\nNow use it normally. It is exactly like the Java 1.5 `BigInteger` and `BigDecimal` API. See the [BigDecimal documentation][java_bd] for information.\n\n```javascript\nvar bigdecimal = require(\"bigdecimal\");\n\nvar i = new bigdecimal.BigInteger(\"1234567890abcdefghijklmn\", 24);\nconsole.log(\"i is \" + i);\n// Output: i is 60509751690538858612029415201127\n\nvar d = new bigdecimal.BigDecimal(i);\nvar x = new bigdecimal.BigDecimal(\"123456.123456789012345678901234567890\");\nconsole.log(\"d * x = \" + d.multiply(x));\n// Output: d * x = 7470299375046812977089832214047022056.555930270554343863089286012030\n\nvar two = new bigdecimal.BigDecimal('2');\nconsole.log(\"Average = \" + d.add(x).divide(two));\n// Output: Average = 30254875845269429306014707662291.561728394506172839450617283945\n\nvar down = bigdecimal.RoundingMode.DOWN();\nconsole.log(\"d / x (25 decimal places) = \" + d.divide(x, 25, DOWN));\n// Output: d / x (25 decimal places) = 490131635404200348624039911.8662623025579331926181155\n```\n\nThere is also a command-line REPL tool for experimentation, `bigdecimal.js` if you install with the `-g` switch, or `./node_modules/.bin/bigdecimal.js` otherwise. The `bigdecimal` module is already loaded, also available as `BD` for convenience.\n\n    bigdecimal.js\n    BigDec> d = new BD.BigDecimal(\"123456.123456789012345678901234567890\")\n\n## Implementation\n\nThis code is compiled Javascript, originating from the Google [GWT][gwt] project. GWT version 2.1 supports the Java BigDecimal class. The implementation came from the Apache Harmony project by way of [gwt-java-math][gwt-java-math] which optimized it for the Javascript compiler.\n\nCompiled Javascript is a problem; however that is offset by these benefits:\n\n* The implementation is mature, optimized, and maintained by Apache and Google\n* The API is well-known, compatible with the J2SE `BigDecimal` and `BigInteger` class\n\nIf you can&rsquo;t stand the idea of running machine-generated code, please implement `BigInteger` and `BigDecimal` in native Javascript; convince the world your implementation is trustworthy, reasonably bug-free, and sure to be maintained for several years and I will glady include it in this project.\n\n## Builds\n\nReady-to-use Javascript builds are available in the tagged Git revisions. Click the `Download Source` button at the top and choose a `vX.Y` tag. The built code will be in `lib/bigdecimal.js`.\n\nTo build BigDecimal yourself from source, follow these steps:\n\n1. Download the [GWT SDK][sdk], version 2.4.0. Extract it in this checkout, as `gwt-2.4.0/`\n1. Get [Apache Ant][ant] if you don't have it (try just running `ant` at the command line). I just unpack it in this checkout and add `$PWD/apche-ant-1.8.2/bin` to my `PATH`.\n1. `rake clean`\n1. `rake`\n\nAs with the prebuilt download, the CommonJS module will be in `lib/bigdecimal.js`.\n\n## License\n\nBigDecimal for Javascript is licensed under the Apache License, version 2.0.\n\n[gwt]: http://code.google.com/webtoolkit/\n[sdk]: http://code.google.com/webtoolkit/download.html\n[ant]: http://ant.apache.org/index.html\n[demo]: http://jhs.iriscouch.com/demo/_design/bigdecimal/_show/ui?e=321.4567890*123456789.123456789987654321\n[commonjs]: http://commonjs.org/\n[gwt-java-math]: http://code.google.com/p/gwt-java-math/\n[couchdb]: http://couchdb.apache.org/\n[node]: http://nodejs.org/\n[java_bd]: http://java.sun.com/j2se/1.5.0/docs/api/java/math/BigDecimal.html\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/iriscouch/bigdecimal.js/issues"
  },
  "_id": "bigdecimal@0.6.1",
  "dist": {
    "shasum": "54f27229f7aac87267ab0082749924c0b02fc5d8"
  },
  "_from": "bigdecimal@0.6.1",
  "_resolved": "https://registry.npmjs.org/bigdecimal/-/bigdecimal-0.6.1.tgz"
}
